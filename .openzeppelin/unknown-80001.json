{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xa9e0FcbBaA0870803beE6f0C92971602687Dcf36",
    "txHash": "0x78f20eb56308a1fdfcc03b20d0621f34f9efcf71bb6112ee107742e141bac6cb"
  },
  "proxies": [
    {
      "address": "0x76345c73EB2f0a4c33418457e2F65A89Dd6d80E9",
      "txHash": "0xadf53c33979cfa86da8bc27f36cd4fc30ad0d981628e2ccefe994b763987fe82",
      "kind": "transparent"
    }
  ],
  "impls": {
    "de835f715a3a6538aa169260fbe1931decf065b2ab8e196a21563de88e85d5b4": {
      "address": "0x998b620aE669c009Eb859398393Ed917aF12E2B0",
      "txHash": "0xa69ad4082372637ba089c617c7f819733100054925482a6828f5227c83b4baa7",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "151",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "152",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:118"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_struct(Counter)2731_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:26"
          },
          {
            "label": "_PERMIT_TYPEHASH",
            "offset": 0,
            "slot": "204",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:99"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)1335_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_struct(Checkpoint)1335_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:261"
          },
          {
            "label": "STAKED_TOKEN",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(ILFIToken)12666",
            "contract": "VLFI",
            "src": "contracts/VLFI.sol:20"
          },
          {
            "label": "liquidity",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VLFI",
            "src": "contracts/VLFI.sol:21"
          },
          {
            "label": "lpTokenPrice",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "VLFI",
            "src": "contracts/VLFI.sol:22"
          },
          {
            "label": "COOLDOWN_SECONDS",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "VLFI",
            "src": "contracts/VLFI.sol:23"
          },
          {
            "label": "UNSTAKE_WINDOW",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VLFI",
            "src": "contracts/VLFI.sol:24"
          },
          {
            "label": "rewardPerSecond",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "VLFI",
            "src": "contracts/VLFI.sol:25"
          },
          {
            "label": "maxTreasuryWithdrawalPercentage",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "VLFI",
            "src": "contracts/VLFI.sol:26"
          },
          {
            "label": "farmInfo",
            "offset": 0,
            "slot": "361",
            "type": "t_struct(FarmInfo)10527_storage",
            "contract": "VLFI",
            "src": "contracts/VLFI.sol:38"
          },
          {
            "label": "cooldownStartTimes",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VLFI",
            "src": "contracts/VLFI.sol:40"
          },
          {
            "label": "userDeposits",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VLFI",
            "src": "contracts/VLFI.sol:41"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_struct(UserInfo)10532_storage)",
            "contract": "VLFI",
            "src": "contracts/VLFI.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Checkpoint)1335_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(ILFIToken)12666": {
            "label": "contract ILFIToken"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)1335_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_struct(Counter)2731_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_mapping(t_address,t_struct(UserInfo)10532_storage)": {
            "label": "mapping(address => struct VLFI.UserInfo)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Checkpoint)1335_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_struct(Counter)2731_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(FarmInfo)10527_storage": {
            "label": "struct VLFI.FarmInfo",
            "members": [
              {
                "label": "accRewardsPerShare",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(UserInfo)10532_storage": {
            "label": "struct VLFI.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_int256"
              }
            ]
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          }
        }
      }
    },
    "024dfd18edb52d3eb8448ad3d5465a0b6389f9ef3292259fee7aa15016b84441": {
      "address": "0x7EcF61D998FEa38B8cC34cC9a46Cf82770854499",
      "txHash": "0x5531857697f8dbebcc974c9206e9b24b4a59b4caeff0e3ea202a890d524d2029",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "151",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "152",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:118"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_struct(Counter)2731_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:26"
          },
          {
            "label": "_PERMIT_TYPEHASH",
            "offset": 0,
            "slot": "204",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:99"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)1335_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_struct(Checkpoint)1335_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:261"
          },
          {
            "label": "STAKED_TOKEN",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(ILFIToken)12152",
            "contract": "VLFIT2",
            "src": "contracts/VLFI.sol:20"
          },
          {
            "label": "liquidity",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VLFIT2",
            "src": "contracts/VLFI.sol:21"
          },
          {
            "label": "lpTokenPrice",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "VLFIT2",
            "src": "contracts/VLFI.sol:22"
          },
          {
            "label": "COOLDOWN_SECONDS",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "VLFIT2",
            "src": "contracts/VLFI.sol:23"
          },
          {
            "label": "UNSTAKE_WINDOW",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VLFIT2",
            "src": "contracts/VLFI.sol:24"
          },
          {
            "label": "rewardPerSecond",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "VLFIT2",
            "src": "contracts/VLFI.sol:25"
          },
          {
            "label": "maxTreasuryWithdrawalPercentage",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "VLFIT2",
            "src": "contracts/VLFI.sol:26"
          },
          {
            "label": "farmInfo",
            "offset": 0,
            "slot": "361",
            "type": "t_struct(FarmInfo)9570_storage",
            "contract": "VLFIT2",
            "src": "contracts/VLFI.sol:38"
          },
          {
            "label": "cooldownStartTimes",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VLFIT2",
            "src": "contracts/VLFI.sol:40"
          },
          {
            "label": "userDeposits",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VLFIT2",
            "src": "contracts/VLFI.sol:41"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_struct(UserInfo)9575_storage)",
            "contract": "VLFIT2",
            "src": "contracts/VLFI.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Checkpoint)1335_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(ILFIToken)12152": {
            "label": "contract ILFIToken"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)1335_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_struct(Counter)2731_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_mapping(t_address,t_struct(UserInfo)9575_storage)": {
            "label": "mapping(address => struct VLFIT2.UserInfo)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Checkpoint)1335_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_struct(Counter)2731_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(FarmInfo)9570_storage": {
            "label": "struct VLFIT2.FarmInfo",
            "members": [
              {
                "label": "accRewardsPerShare",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(UserInfo)9575_storage": {
            "label": "struct VLFIT2.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_int256"
              }
            ]
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          }
        }
      }
    },
    "18456ef18b8b90b4880fde5980f6cdfffcdb5770621d01c9186b67e717de4fc0": {
      "address": "0x23edCaE74b3292877D3944E69abe5954cE758bEb",
      "txHash": "0xa6e1dc87c2ea434f01e2b3bd04b19f43003ad01e81b6c2af864881b6b0c8f2d3",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "151",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "152",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:118"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_struct(Counter)2731_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:26"
          },
          {
            "label": "_PERMIT_TYPEHASH",
            "offset": 0,
            "slot": "204",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:99"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)1335_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_struct(Checkpoint)1335_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:261"
          },
          {
            "label": "STAKED_TOKEN",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(ILFIToken)12161",
            "contract": "VLFIT3",
            "src": "contracts/VLFI.sol:20"
          },
          {
            "label": "liquidity",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VLFIT3",
            "src": "contracts/VLFI.sol:21"
          },
          {
            "label": "lpTokenPrice",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "VLFIT3",
            "src": "contracts/VLFI.sol:22"
          },
          {
            "label": "COOLDOWN_SECONDS",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "VLFIT3",
            "src": "contracts/VLFI.sol:23"
          },
          {
            "label": "UNSTAKE_WINDOW",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VLFIT3",
            "src": "contracts/VLFI.sol:24"
          },
          {
            "label": "rewardPerSecond",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "VLFIT3",
            "src": "contracts/VLFI.sol:25"
          },
          {
            "label": "maxTreasuryWithdrawalPercentage",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "VLFIT3",
            "src": "contracts/VLFI.sol:26"
          },
          {
            "label": "farmInfo",
            "offset": 0,
            "slot": "361",
            "type": "t_struct(FarmInfo)9578_storage",
            "contract": "VLFIT3",
            "src": "contracts/VLFI.sol:38"
          },
          {
            "label": "cooldownStartTimes",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VLFIT3",
            "src": "contracts/VLFI.sol:40"
          },
          {
            "label": "userDeposits",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VLFIT3",
            "src": "contracts/VLFI.sol:41"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_struct(UserInfo)9583_storage)",
            "contract": "VLFIT3",
            "src": "contracts/VLFI.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Checkpoint)1335_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(ILFIToken)12161": {
            "label": "contract ILFIToken"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)1335_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_struct(Counter)2731_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_mapping(t_address,t_struct(UserInfo)9583_storage)": {
            "label": "mapping(address => struct VLFIT3.UserInfo)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Checkpoint)1335_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_struct(Counter)2731_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(FarmInfo)9578_storage": {
            "label": "struct VLFIT3.FarmInfo",
            "members": [
              {
                "label": "accRewardsPerShare",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(UserInfo)9583_storage": {
            "label": "struct VLFIT3.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_int256"
              }
            ]
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          }
        }
      }
    }
  }
}
