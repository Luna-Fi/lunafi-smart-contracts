{
  "address": "0x4b436B0cF7C7357D9dff8Aa7bBDA6cCc084f41d9",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "getBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "safeAdd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "c",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "safeSub",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "c",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xeac18d0d4ddc40cc287a1bf92a6e1cbdcde5560df056e03ba264f78d3fe448bf",
  "receipt": {
    "to": null,
    "from": "0xdd8eBa4604D2a9C6c77e4bC557B1884119174726",
    "contractAddress": "0x4b436B0cF7C7357D9dff8Aa7bBDA6cCc084f41d9",
    "transactionIndex": 43,
    "gasUsed": "1184054",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000808000000000000000000000000000000000000000000000000020000000000000000000800000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000802000000000000000000002000000000001000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xa231de426f6f3d54e3e5bf24bd0439f7b8d935e0dc8465d42d9ce75a4360b9f6",
    "transactionHash": "0xeac18d0d4ddc40cc287a1bf92a6e1cbdcde5560df056e03ba264f78d3fe448bf",
    "logs": [
      {
        "transactionIndex": 43,
        "blockNumber": 11820663,
        "transactionHash": "0xeac18d0d4ddc40cc287a1bf92a6e1cbdcde5560df056e03ba264f78d3fe448bf",
        "address": "0x4b436B0cF7C7357D9dff8Aa7bBDA6cCc084f41d9",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000dd8eba4604d2a9c6c77e4bc557b1884119174726"
        ],
        "data": "0x000000000000000000000000000000000000000000000000016345785d8a0000",
        "logIndex": 69,
        "blockHash": "0xa231de426f6f3d54e3e5bf24bd0439f7b8d935e0dc8465d42d9ce75a4360b9f6"
      }
    ],
    "blockNumber": 11820663,
    "cumulativeGasUsed": "5157049",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "31a32bf59aad1b128efb7fb0e5039ad2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"getBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeAdd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeSub\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mockWBTCToken.sol\":\"mockWBTCToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mockWBTCToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.10;\\n\\n//--------------------------------------\\n//  Mock WBTC Contract \\n//\\n// Symbol      : tWBTC\\n// Name        : mockWBTCToken\\n// Total supply: 1000000000\\n// Decimals    : 8\\n//--------------------------------------\\n\\nabstract contract ERC20Interface {\\n    function totalSupply() virtual external view returns (uint256);\\n    function balanceOf(address tokenOwner) virtual external view returns (uint);\\n    function allowance(address tokenOwner, address spender) virtual external view returns (uint);\\n    function transfer(address to, uint tokens) virtual external returns (bool);\\n    function approve(address spender, uint tokens) virtual external returns (bool);\\n    function transferFrom(address from, address to, uint tokens) virtual external returns (bool);\\n    \\n    event Transfer(address indexed from, address indexed to, uint tokens);\\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\\n\\n}\\n\\n// ----------------------------------------------------------------------------\\n// Safe Math Library \\n// ----------------------------------------------------------------------------\\ncontract SafeMath {\\n    function safeAdd(uint a, uint b) public pure returns (uint c) {\\n        c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    function safeSub(uint a, uint b) public pure returns (uint c) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\"); \\n        c = a - b; \\n        return c;\\n    }\\n\\n}\\n\\ncontract mockWBTCToken is ERC20Interface, SafeMath{\\n    string public name;\\n    string public symbol;\\n    uint8 public decimals;\\n    uint256 public initialSupply;\\n    uint256 public _totalSupply;\\n    address public owner;\\n\\n    mapping(address => uint) internal balances;\\n    mapping(address => mapping(address => uint)) internal allowed;\\n    \\n    constructor(){\\n        name = \\\"mockWBTCToken\\\";\\n        symbol = \\\"tWBTC\\\";\\n        decimals = 8;\\n        _totalSupply = 1000000000 * 10 ** uint256(decimals);\\n\\t    initialSupply = _totalSupply;\\n\\t    balances[msg.sender] = _totalSupply;\\n        owner = msg.sender;\\n        emit Transfer(address(0), msg.sender, _totalSupply);\\n    }\\n    \\n    function totalSupply() external view override returns (uint256) {\\n        return safeSub(_totalSupply, balances[address(0)]);\\n    }\\n\\n    function balanceOf(address tokenOwner) external view override returns (uint getBalance) {\\n        return balances[tokenOwner];\\n    }\\n \\n    function allowance(address tokenOwner, address spender) external view override returns (uint remaining) {\\n        return allowed[tokenOwner][spender];\\n    }\\n \\n    function approve(address spender, uint tokens) external override returns (bool success) {\\n        allowed[msg.sender][spender] = tokens;\\n        emit Approval(msg.sender, spender, tokens);\\n        return true;\\n    }\\n    \\n    function transfer(address to, uint tokens) external override returns (bool success) {\\n        require(to != address(0));\\n        balances[msg.sender] = safeSub(balances[msg.sender], tokens);\\n        balances[to] = safeAdd(balances[to], tokens);\\n        emit Transfer(msg.sender, to, tokens);\\n        return true;\\n    }\\n    \\n   function transferFrom(address from, address to, uint tokens) external override returns (bool success) {\\n        require(to != address(0));\\n        balances[from] = safeSub(balances[from], tokens);\\n        allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);\\n        balances[to] = safeAdd(balances[to], tokens);\\n        emit Transfer(from, to, tokens);\\n        return true;\\n   }\\n\\n }\",\"keccak256\":\"0x2802ab90a1e483b472c58155bc893e011630fd85b201a48d904c11f1cb5e0259\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600d81526020017f6d6f636b57425443546f6b656e00000000000000000000000000000000000000815250600090805190602001906200005f92919062000202565b506040518060400160405280600581526020017f745742544300000000000000000000000000000000000000000000000000000081525060019080519060200190620000ad92919062000202565b506008600260006101000a81548160ff021916908360ff160217905550600260009054906101000a900460ff1660ff16600a620000eb91906200043f565b633b9aca00620000fc919062000490565b600481905550600454600381905550600454600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600454604051620001f4919062000502565b60405180910390a362000584565b82805462000210906200054e565b90600052602060002090601f01602090048101928262000234576000855562000280565b82601f106200024f57805160ff191683800117855562000280565b8280016001018555821562000280579182015b828111156200027f57825182559160200191906001019062000262565b5b5090506200028f919062000293565b5090565b5b80821115620002ae57600081600090555060010162000294565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156200034057808604811115620003185762000317620002b2565b5b6001851615620003285780820291505b80810290506200033885620002e1565b9450620002f8565b94509492505050565b6000826200035b57600190506200042e565b816200036b57600090506200042e565b81600181146200038457600281146200038f57620003c5565b60019150506200042e565b60ff841115620003a457620003a3620002b2565b5b8360020a915084821115620003be57620003bd620002b2565b5b506200042e565b5060208310610133831016604e8410600b8410161715620003ff5782820a905083811115620003f957620003f8620002b2565b5b6200042e565b6200040e8484846001620002ee565b92509050818404811115620004285762000427620002b2565b5b81810290505b9392505050565b6000819050919050565b60006200044c8262000435565b9150620004598362000435565b9250620004887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000349565b905092915050565b60006200049d8262000435565b9150620004aa8362000435565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620004e657620004e5620002b2565b5b828202905092915050565b620004fc8162000435565b82525050565b6000602082019050620005196000830184620004f1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200056757607f821691505b602082108114156200057e576200057d6200051f565b5b50919050565b61114080620005946000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a293d1e811610066578063a293d1e814610251578063a9059cbb14610281578063dd62ed3e146102b1578063e6cb9013146102e1576100ea565b806370a08231146101e55780638da5cb5b1461021557806395d89b4114610233576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b578063378dc3dc146101a95780633eaaf86b146101c7576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f7610311565b6040516101049190610c5c565b60405180910390f35b61012760048036038101906101229190610d17565b61039f565b6040516101349190610d72565b60405180910390f35b610145610491565b6040516101529190610d9c565b60405180910390f35b61017560048036038101906101709190610db7565b6104e3565b6040516101829190610d72565b60405180910390f35b6101936107ac565b6040516101a09190610e26565b60405180910390f35b6101b16107bf565b6040516101be9190610d9c565b60405180910390f35b6101cf6107c5565b6040516101dc9190610d9c565b60405180910390f35b6101ff60048036038101906101fa9190610e41565b6107cb565b60405161020c9190610d9c565b60405180910390f35b61021d610814565b60405161022a9190610e7d565b60405180910390f35b61023b61083a565b6040516102489190610c5c565b60405180910390f35b61026b60048036038101906102669190610e98565b6108c8565b6040516102789190610d9c565b60405180910390f35b61029b60048036038101906102969190610d17565b610921565b6040516102a89190610d72565b60405180910390f35b6102cb60048036038101906102c69190610ed8565b610ae3565b6040516102d89190610d9c565b60405180910390f35b6102fb60048036038101906102f69190610e98565b610b6a565b6040516103089190610d9c565b60405180910390f35b6000805461031e90610f47565b80601f016020809104026020016040519081016040528092919081815260200182805461034a90610f47565b80156103975780601f1061036c57610100808354040283529160200191610397565b820191906000526020600020905b81548152906001019060200180831161037a57829003601f168201915b505050505081565b600081600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161047f9190610d9c565b60405180910390a36001905092915050565b60006104de600454600660008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108c8565b905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561051e57600080fd5b610567600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836108c8565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610630600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836108c8565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506106f9600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610b6a565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107999190610d9c565b60405180910390a3600190509392505050565b600260009054906101000a900460ff1681565b60035481565b60045481565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001805461084790610f47565b80601f016020809104026020016040519081016040528092919081815260200182805461087390610f47565b80156108c05780601f10610895576101008083540402835291602001916108c0565b820191906000526020600020905b8154815290600101906020018083116108a357829003601f168201915b505050505081565b60008282111561090d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090490610fc5565b60405180910390fd5b81836109199190611014565b905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561095c57600080fd5b6109a5600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836108c8565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a31600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610b6a565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ad19190610d9c565b60405180910390a36001905092915050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008183610b789190611048565b905082811015610bbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb4906110ea565b60405180910390fd5b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bfd578082015181840152602081019050610be2565b83811115610c0c576000848401525b50505050565b6000601f19601f8301169050919050565b6000610c2e82610bc3565b610c388185610bce565b9350610c48818560208601610bdf565b610c5181610c12565b840191505092915050565b60006020820190508181036000830152610c768184610c23565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cae82610c83565b9050919050565b610cbe81610ca3565b8114610cc957600080fd5b50565b600081359050610cdb81610cb5565b92915050565b6000819050919050565b610cf481610ce1565b8114610cff57600080fd5b50565b600081359050610d1181610ceb565b92915050565b60008060408385031215610d2e57610d2d610c7e565b5b6000610d3c85828601610ccc565b9250506020610d4d85828601610d02565b9150509250929050565b60008115159050919050565b610d6c81610d57565b82525050565b6000602082019050610d876000830184610d63565b92915050565b610d9681610ce1565b82525050565b6000602082019050610db16000830184610d8d565b92915050565b600080600060608486031215610dd057610dcf610c7e565b5b6000610dde86828701610ccc565b9350506020610def86828701610ccc565b9250506040610e0086828701610d02565b9150509250925092565b600060ff82169050919050565b610e2081610e0a565b82525050565b6000602082019050610e3b6000830184610e17565b92915050565b600060208284031215610e5757610e56610c7e565b5b6000610e6584828501610ccc565b91505092915050565b610e7781610ca3565b82525050565b6000602082019050610e926000830184610e6e565b92915050565b60008060408385031215610eaf57610eae610c7e565b5b6000610ebd85828601610d02565b9250506020610ece85828601610d02565b9150509250929050565b60008060408385031215610eef57610eee610c7e565b5b6000610efd85828601610ccc565b9250506020610f0e85828601610ccc565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f5f57607f821691505b60208210811415610f7357610f72610f18565b5b50919050565b7f536166654d6174683a207375627472616374696f6e206f766572666c6f770000600082015250565b6000610faf601e83610bce565b9150610fba82610f79565b602082019050919050565b60006020820190508181036000830152610fde81610fa2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061101f82610ce1565b915061102a83610ce1565b92508282101561103d5761103c610fe5565b5b828203905092915050565b600061105382610ce1565b915061105e83610ce1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561109357611092610fe5565b5b828201905092915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b60006110d4601b83610bce565b91506110df8261109e565b602082019050919050565b60006020820190508181036000830152611103816110c7565b905091905056fea2646970667358221220267fb9c95cde46568e3482255bba3f48f6c1f5aea91a3ea8353ffcba7140c20d64736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a293d1e811610066578063a293d1e814610251578063a9059cbb14610281578063dd62ed3e146102b1578063e6cb9013146102e1576100ea565b806370a08231146101e55780638da5cb5b1461021557806395d89b4114610233576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b578063378dc3dc146101a95780633eaaf86b146101c7576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f7610311565b6040516101049190610c5c565b60405180910390f35b61012760048036038101906101229190610d17565b61039f565b6040516101349190610d72565b60405180910390f35b610145610491565b6040516101529190610d9c565b60405180910390f35b61017560048036038101906101709190610db7565b6104e3565b6040516101829190610d72565b60405180910390f35b6101936107ac565b6040516101a09190610e26565b60405180910390f35b6101b16107bf565b6040516101be9190610d9c565b60405180910390f35b6101cf6107c5565b6040516101dc9190610d9c565b60405180910390f35b6101ff60048036038101906101fa9190610e41565b6107cb565b60405161020c9190610d9c565b60405180910390f35b61021d610814565b60405161022a9190610e7d565b60405180910390f35b61023b61083a565b6040516102489190610c5c565b60405180910390f35b61026b60048036038101906102669190610e98565b6108c8565b6040516102789190610d9c565b60405180910390f35b61029b60048036038101906102969190610d17565b610921565b6040516102a89190610d72565b60405180910390f35b6102cb60048036038101906102c69190610ed8565b610ae3565b6040516102d89190610d9c565b60405180910390f35b6102fb60048036038101906102f69190610e98565b610b6a565b6040516103089190610d9c565b60405180910390f35b6000805461031e90610f47565b80601f016020809104026020016040519081016040528092919081815260200182805461034a90610f47565b80156103975780601f1061036c57610100808354040283529160200191610397565b820191906000526020600020905b81548152906001019060200180831161037a57829003601f168201915b505050505081565b600081600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161047f9190610d9c565b60405180910390a36001905092915050565b60006104de600454600660008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108c8565b905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561051e57600080fd5b610567600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836108c8565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610630600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836108c8565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506106f9600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610b6a565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107999190610d9c565b60405180910390a3600190509392505050565b600260009054906101000a900460ff1681565b60035481565b60045481565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001805461084790610f47565b80601f016020809104026020016040519081016040528092919081815260200182805461087390610f47565b80156108c05780601f10610895576101008083540402835291602001916108c0565b820191906000526020600020905b8154815290600101906020018083116108a357829003601f168201915b505050505081565b60008282111561090d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090490610fc5565b60405180910390fd5b81836109199190611014565b905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561095c57600080fd5b6109a5600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836108c8565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a31600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610b6a565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ad19190610d9c565b60405180910390a36001905092915050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008183610b789190611048565b905082811015610bbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb4906110ea565b60405180910390fd5b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bfd578082015181840152602081019050610be2565b83811115610c0c576000848401525b50505050565b6000601f19601f8301169050919050565b6000610c2e82610bc3565b610c388185610bce565b9350610c48818560208601610bdf565b610c5181610c12565b840191505092915050565b60006020820190508181036000830152610c768184610c23565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cae82610c83565b9050919050565b610cbe81610ca3565b8114610cc957600080fd5b50565b600081359050610cdb81610cb5565b92915050565b6000819050919050565b610cf481610ce1565b8114610cff57600080fd5b50565b600081359050610d1181610ceb565b92915050565b60008060408385031215610d2e57610d2d610c7e565b5b6000610d3c85828601610ccc565b9250506020610d4d85828601610d02565b9150509250929050565b60008115159050919050565b610d6c81610d57565b82525050565b6000602082019050610d876000830184610d63565b92915050565b610d9681610ce1565b82525050565b6000602082019050610db16000830184610d8d565b92915050565b600080600060608486031215610dd057610dcf610c7e565b5b6000610dde86828701610ccc565b9350506020610def86828701610ccc565b9250506040610e0086828701610d02565b9150509250925092565b600060ff82169050919050565b610e2081610e0a565b82525050565b6000602082019050610e3b6000830184610e17565b92915050565b600060208284031215610e5757610e56610c7e565b5b6000610e6584828501610ccc565b91505092915050565b610e7781610ca3565b82525050565b6000602082019050610e926000830184610e6e565b92915050565b60008060408385031215610eaf57610eae610c7e565b5b6000610ebd85828601610d02565b9250506020610ece85828601610d02565b9150509250929050565b60008060408385031215610eef57610eee610c7e565b5b6000610efd85828601610ccc565b9250506020610f0e85828601610ccc565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f5f57607f821691505b60208210811415610f7357610f72610f18565b5b50919050565b7f536166654d6174683a207375627472616374696f6e206f766572666c6f770000600082015250565b6000610faf601e83610bce565b9150610fba82610f79565b602082019050919050565b60006020820190508181036000830152610fde81610fa2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061101f82610ce1565b915061102a83610ce1565b92508282101561103d5761103c610fe5565b5b828203905092915050565b600061105382610ce1565b915061105e83610ce1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561109357611092610fe5565b5b828201905092915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b60006110d4601b83610bce565b91506110df8261109e565b602082019050919050565b60006020820190508181036000830152611103816110c7565b905091905056fea2646970667358221220267fb9c95cde46568e3482255bba3f48f6c1f5aea91a3ea8353ffcba7140c20d64736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5250,
        "contract": "contracts/mockWBTCToken.sol:mockWBTCToken",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 5252,
        "contract": "contracts/mockWBTCToken.sol:mockWBTCToken",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 5254,
        "contract": "contracts/mockWBTCToken.sol:mockWBTCToken",
        "label": "decimals",
        "offset": 0,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 5256,
        "contract": "contracts/mockWBTCToken.sol:mockWBTCToken",
        "label": "initialSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 5258,
        "contract": "contracts/mockWBTCToken.sol:mockWBTCToken",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 5260,
        "contract": "contracts/mockWBTCToken.sol:mockWBTCToken",
        "label": "owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 5264,
        "contract": "contracts/mockWBTCToken.sol:mockWBTCToken",
        "label": "balances",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 5270,
        "contract": "contracts/mockWBTCToken.sol:mockWBTCToken",
        "label": "allowed",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}